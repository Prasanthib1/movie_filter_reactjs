{"version":3,"sources":["SearchFilter.js","App.js","reportWebVitals.js","index.js"],"names":["SearchFilter","state","itemsToDisplay","itemsToUse","genres","optionSelected","e","document","getElementById","selected","options","selectedIndex","text","setState","filter","item","toLowerCase","includes","sortBy","value","sort","a","b","className","id","onChange","this","map","genre","rest","substring","length","split","genreToShow","pill","reRenderList","i","data","push","forEach","c","indexOf","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f92a8d04.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport data from \"./data.json\";\r\n\r\nclass SearchFilter extends Component {\r\n  state = {\r\n    itemsToDisplay: [],\r\n    itemsToUse: [],\r\n    genres: []\r\n  };\r\n\r\n  optionSelected = () => {\r\n    var e = document.getElementById(\"genre-filter\");\r\n    var selected = e.options[e.selectedIndex].text;\r\n\r\n    if (selected === \"Choose Any\")\r\n      this.setState({ itemsToDisplay: [...this.state.itemsToUse] });\r\n    else {\r\n      let itemsToDisplay = [];\r\n      itemsToDisplay = this.state.itemsToUse.filter(item =>\r\n        item[\"Genre\"].toLowerCase().includes(selected.toLowerCase())\r\n      );\r\n      this.setState({ itemsToDisplay });\r\n    }\r\n  };\r\n\r\n  sortBy = () => {\r\n    var e = document.getElementById(\"genre-sort\");\r\n    var selected = e.options[e.selectedIndex].value;\r\n\r\n    if (selected === \"ranking\")\r\n      this.setState({ itemsToDisplay: [...this.state.itemsToUse] });\r\n    else if (selected === \"asc\") {\r\n      let itemsToDisplay = [...this.state.itemsToDisplay];\r\n      itemsToDisplay.sort(function(a, b) {\r\n        return a[\"Rating\"] - b[\"Rating\"];\r\n      });\r\n      this.setState({ itemsToDisplay });\r\n    } else {\r\n      let itemsToDisplay = [...this.state.itemsToDisplay];\r\n      itemsToDisplay.sort(function(a, b) {\r\n        return b[\"Rating\"] - a[\"Rating\"];\r\n      });\r\n      this.setState({ itemsToDisplay });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <h1>MovieFilter</h1>\r\n        </div>\r\n        <div className=\"genrefilter\">\r\n          <div>\r\n            Choose a genre : \r\n            &nbsp;\r\n            <select id=\"genre-filter\" onChange={this.optionSelected}>\r\n              <option value=\"any\">Choose Any</option>\r\n              {this.state.genres.map(genre => {\r\n                return <option value={genre}>{genre}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            Sort by : &nbsp;\r\n            <select id=\"genre-sort\" onChange={this.sortBy}>\r\n              <option value=\"ranking\">Ranking</option>\r\n              <option value=\"asc\">Rating (Low to High)</option>\r\n              <option value=\"des\">Rating (High to Low)</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          {this.state.itemsToDisplay.map(rest => {\r\n            let genres = rest[\"Genre\"].substring(1, rest[\"Genre\"].length - 2).split(\",\");\r\n            return (\r\n              <div className=\"movie\">\r\n                <div className=\"movie-info\">\r\n                  <span className=\"movie-name\">{rest[\"Name\"]}</span>\r\n                  <div className=\"movie-genres\">\r\n                    {genres.map(genre => {\r\n                      let genreToShow = genre.substring(1,genre.length - 1);\r\n\r\n                      genreToShow = genreToShow.includes(\"'\")\r\n                        ? genreToShow.substring(1, genreToShow.length)\r\n                        : genreToShow;\r\n                      return (\r\n                        <div pill className=\"movie-genre\">\r\n                          {genreToShow}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n                <div className=\"movie-stats\">\r\n                  <div className=\"movie-stats-sub\">\r\n                  <p> Number of reviews :  &nbsp; </p>\r\n                  <p>{rest[\"Number of Reviews\"]}</p>\r\n                  </div>\r\n                  <div className=\"movie-stats-sub\">\r\n                  <p> Rating : &nbsp; </p>\r\n                  <p>\r\n                   {rest[\"Rating\"]}\r\n                  </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.reRenderList();\r\n  }\r\n\r\n  reRenderList() {\r\n    var genres = [];\r\n    var itemsToDisplay = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      itemsToDisplay.push(data[i]);\r\n      data[i][\"Genre\"].substring(1, data[i][\"Genre\"].length - 2).split(\",\")\r\n        .forEach(genre => {\r\n          let c = genre.substring(1, genre.length - 1);\r\n          c = c.includes(\"'\") ? c.substring(1, c.length) : c;\r\n          if (genres.indexOf(c) < 0) {\r\n            genres.push(c);\r\n          }\r\n        });\r\n    }\r\n\r\n    this.setState({ genres });\r\n\r\n    this.setState({ itemsToDisplay }, () => {\r\n      this.setState({ itemsToUse: [...this.state.itemsToDisplay] });\r\n    });\r\n  }\r\n}\r\n\r\nexport default SearchFilter;","import React, { Component } from 'react';\r\nimport SearchFilter from './SearchFilter';\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <SearchFilter />\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}